//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.YarpControl
{
    [Serializable]
    public class SetControlModesRequest : Message
    {
        public const string k_RosMessageName = "yarp_control_msgs/SetControlModes";
        public override string RosMessageName => k_RosMessageName;

        //  Service used to set the control mode for a set of joints
        //  names: it can contain the names of the joints for which the control mode has to be set. If left empty, a control mode for all the available joints has to be specified
        //  modes: it contains the new control modes to set for the joints specified in "names". If "names" is empty, a control mode value for all the available joints has to be specified
        public string[] names;
        public string[] modes;

        public SetControlModesRequest()
        {
            this.names = new string[0];
            this.modes = new string[0];
        }

        public SetControlModesRequest(string[] names, string[] modes)
        {
            this.names = names;
            this.modes = modes;
        }

        public static SetControlModesRequest Deserialize(MessageDeserializer deserializer) => new SetControlModesRequest(deserializer);

        private SetControlModesRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.names, deserializer.ReadLength());
            deserializer.Read(out this.modes, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.names);
            serializer.Write(this.names);
            serializer.WriteLength(this.modes);
            serializer.Write(this.modes);
        }

        public override string ToString()
        {
            return "SetControlModesRequest: " +
            "\nnames: " + System.String.Join(", ", names.ToList()) +
            "\nmodes: " + System.String.Join(", ", modes.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
